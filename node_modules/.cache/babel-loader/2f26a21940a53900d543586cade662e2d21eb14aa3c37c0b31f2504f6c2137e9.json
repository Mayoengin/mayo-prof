{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import\"../css/Projects.css\";import stockPredictorImage from\"../images/stock.png\";import ecgClassification from\"../images/ecg.jpg\";import cryptoTrackerImage from\"../images/nurslink.PNG\";import employee from\"../images/employee.jpeg\";import githubLogo from\"../images/github.png\";import game from\"../images/game.jpeg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const projects=[{title:\"Text Adventure Game\",description:\"This text adventure game consists of a player that represents a human, who makes certain decisions to achieve their goal. Add controls and different commands to deliver a rich and immersive story.\",image:game,github:\"https://github.com/Mayoengin/text_adventure_game\"},{title:\"Employee Registration App\",description:\"Employee Registration App Angular 18.api usage, dynamic entry, inline Editing in Angular\",image:employee,github:\"https://github.com/Mayoengin/-Employee-Registration-app\"},{title:\"Stock Predictor\",description:\"Created a stock predictor using Python and Flask for backend framework as well as HTML and CSS for frontend, while also handling real-time data retrieval and LLM model integration.\",image:stockPredictorImage,github:\"https://github.com/Mayoengin/stock_prices_prediction\"},{title:\"ECG Classification Model\",description:\"A deep neural network with residual blocks (DNN-RB) for classifying ECG signals into six types of heartbeats. Using the MIT-BIH Arrhythmia dataset, the model inputs segmented ECG signals and outputs 6 types of classifications.\",image:ecgClassification,github:\"https://github.com/Mayoengin/ecg_classification\"},{title:\"Nurse Link Mobile App\",description:\"Developing a mobile application that facilitates the connection between the nurses and the people who need them at home on a regular basis. (Uber for nurses).\",image:cryptoTrackerImage,github:\"https://github.com/Mayoengin/nurslink_1\"}];const Projects=()=>{const[scrollPosition,setScrollPosition]=useState(0);const projectsWrapperRef=useRef(null);const scrollLeft=()=>{setScrollPosition(prev=>prev===0?projects.length-1:prev-1);};const scrollRight=()=>{setScrollPosition(prev=>prev===projects.length-1?0:prev+1);};const getTransform=()=>{const cardWidth=320;// Card width + margin\nreturn\"translateX(-\".concat(scrollPosition*cardWidth,\"px)\");};useEffect(()=>{projectsWrapperRef.current.style.transition='transform 0.5s ease-in-out';projectsWrapperRef.current.style.transform=getTransform();},[scrollPosition,getTransform]);return/*#__PURE__*/_jsxs(\"div\",{className:\"projects-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"projects-header\",children:\"My Portfolio\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"projects-subheader\",children:\"Awesome Projects\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"projects-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"scroll-button scroll-button-left\",onClick:scrollLeft,children:\"<\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projects-grid\",ref:projectsWrapperRef,children:projects.concat(projects.slice(0,3)).map((project,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"project-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"project-image-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"project-image\"}),/*#__PURE__*/_jsx(\"a\",{href:project.github,target:\"_blank\",rel:\"noopener noreferrer\",className:\"github-link\",children:/*#__PURE__*/_jsx(\"img\",{src:githubLogo,alt:\"GitHub\",className:\"github-icon\"})})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"project-title\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:\"project-description\",children:project.description})]},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"scroll-button scroll-button-right\",onClick:scrollRight,children:\">\"})]})]});};export default Projects;","map":{"version":3,"names":["React","useState","useRef","useEffect","stockPredictorImage","ecgClassification","cryptoTrackerImage","employee","githubLogo","game","jsx","_jsx","jsxs","_jsxs","projects","title","description","image","github","Projects","scrollPosition","setScrollPosition","projectsWrapperRef","scrollLeft","prev","length","scrollRight","getTransform","cardWidth","concat","current","style","transition","transform","className","children","onClick","ref","slice","map","project","index","src","alt","href","target","rel"],"sources":["C:/Users/majdt/Desktop/mayo/src/components/Projects.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../css/Projects.css\";\r\n\r\nimport stockPredictorImage from \"../images/stock.png\";\r\nimport ecgClassification from \"../images/ecg.jpg\";\r\nimport cryptoTrackerImage from \"../images/nurslink.PNG\";\r\nimport employee from \"../images/employee.jpeg\";\r\nimport githubLogo from \"../images/github.png\";\r\nimport game from \"../images/game.jpeg\";\r\n\r\nconst projects = [\r\n  {\r\n    title: \"Text Adventure Game\",\r\n    description:\r\n      \"This text adventure game consists of a player that represents a human, who makes certain decisions to achieve their goal. Add controls and different commands to deliver a rich and immersive story.\",\r\n    image: game,\r\n    github: \"https://github.com/Mayoengin/text_adventure_game\",\r\n  },\r\n  {\r\n    title: \"Employee Registration App\",\r\n    description:\r\n      \"Employee Registration App Angular 18.api usage, dynamic entry, inline Editing in Angular\",\r\n    image: employee,\r\n    github: \"https://github.com/Mayoengin/-Employee-Registration-app\",\r\n  },\r\n  {\r\n    title: \"Stock Predictor\",\r\n    description:\r\n      \"Created a stock predictor using Python and Flask for backend framework as well as HTML and CSS for frontend, while also handling real-time data retrieval and LLM model integration.\",\r\n    image: stockPredictorImage,\r\n    github: \"https://github.com/Mayoengin/stock_prices_prediction\",\r\n  },\r\n  {\r\n    title: \"ECG Classification Model\",\r\n    description:\r\n      \"A deep neural network with residual blocks (DNN-RB) for classifying ECG signals into six types of heartbeats. Using the MIT-BIH Arrhythmia dataset, the model inputs segmented ECG signals and outputs 6 types of classifications.\",\r\n    image: ecgClassification,\r\n    github: \"https://github.com/Mayoengin/ecg_classification\",\r\n  },\r\n  {\r\n    title: \"Nurse Link Mobile App\",\r\n    description:\r\n      \"Developing a mobile application that facilitates the connection between the nurses and the people who need them at home on a regular basis. (Uber for nurses).\",\r\n    image: cryptoTrackerImage,\r\n    github: \"https://github.com/Mayoengin/nurslink_1\",\r\n  },\r\n];\r\n\r\nconst Projects = () => {\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const projectsWrapperRef = useRef(null);\r\n\r\n  const scrollLeft = () => {\r\n    setScrollPosition((prev) => (prev === 0 ? projects.length - 1 : prev - 1));\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    setScrollPosition((prev) => (prev === projects.length - 1 ? 0 : prev + 1));\r\n  };\r\n\r\n  const getTransform = () => {\r\n    const cardWidth = 320; // Card width + margin\r\n    return `translateX(-${scrollPosition * cardWidth}px)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    projectsWrapperRef.current.style.transition = 'transform 0.5s ease-in-out';\r\n    projectsWrapperRef.current.style.transform = getTransform();\r\n  }, [scrollPosition, getTransform]);\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h2 className=\"projects-header\">My Portfolio</h2>\r\n      <h3 className=\"projects-subheader\">Awesome Projects</h3>\r\n      <div className=\"projects-wrapper\">\r\n        <button className=\"scroll-button scroll-button-left\" onClick={scrollLeft}>\r\n          &lt;\r\n        </button>\r\n        <div className=\"projects-grid\" ref={projectsWrapperRef}>\r\n          {projects.concat(projects.slice(0, 3)).map((project, index) => (\r\n            <div key={index} className=\"project-card\">\r\n              <div className=\"project-image-container\">\r\n                <img\r\n                  src={project.image}\r\n                  alt={project.title}\r\n                  className=\"project-image\"\r\n                />\r\n                <a\r\n                  href={project.github}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"github-link\"\r\n                >\r\n                  <img src={githubLogo} alt=\"GitHub\" className=\"github-icon\" />\r\n                </a>\r\n              </div>\r\n              <h4 className=\"project-title\">{project.title}</h4>\r\n              <p className=\"project-description\">{project.description}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"scroll-button scroll-button-right\" onClick={scrollRight}>\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,qBAAqB,CAE5B,MAAO,CAAAC,mBAAmB,KAAM,qBAAqB,CACrD,MAAO,CAAAC,iBAAiB,KAAM,mBAAmB,CACjD,MAAO,CAAAC,kBAAkB,KAAM,wBAAwB,CACvD,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAC9C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,IAAI,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,QAAQ,CAAG,CACf,CACEC,KAAK,CAAE,qBAAqB,CAC5BC,WAAW,CACT,sMAAsM,CACxMC,KAAK,CAAER,IAAI,CACXS,MAAM,CAAE,kDACV,CAAC,CACD,CACEH,KAAK,CAAE,2BAA2B,CAClCC,WAAW,CACT,0FAA0F,CAC5FC,KAAK,CAAEV,QAAQ,CACfW,MAAM,CAAE,yDACV,CAAC,CACD,CACEH,KAAK,CAAE,iBAAiB,CACxBC,WAAW,CACT,sLAAsL,CACxLC,KAAK,CAAEb,mBAAmB,CAC1Bc,MAAM,CAAE,sDACV,CAAC,CACD,CACEH,KAAK,CAAE,0BAA0B,CACjCC,WAAW,CACT,oOAAoO,CACtOC,KAAK,CAAEZ,iBAAiB,CACxBa,MAAM,CAAE,iDACV,CAAC,CACD,CACEH,KAAK,CAAE,uBAAuB,CAC9BC,WAAW,CACT,gKAAgK,CAClKC,KAAK,CAAEX,kBAAkB,CACzBY,MAAM,CAAE,yCACV,CAAC,CACF,CAED,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CACvD,KAAM,CAAAqB,kBAAkB,CAAGpB,MAAM,CAAC,IAAI,CAAC,CAEvC,KAAM,CAAAqB,UAAU,CAAGA,CAAA,GAAM,CACvBF,iBAAiB,CAAEG,IAAI,EAAMA,IAAI,GAAK,CAAC,CAAGV,QAAQ,CAACW,MAAM,CAAG,CAAC,CAAGD,IAAI,CAAG,CAAE,CAAC,CAC5E,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACxBL,iBAAiB,CAAEG,IAAI,EAAMA,IAAI,GAAKV,QAAQ,CAACW,MAAM,CAAG,CAAC,CAAG,CAAC,CAAGD,IAAI,CAAG,CAAE,CAAC,CAC5E,CAAC,CAED,KAAM,CAAAG,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,SAAS,CAAG,GAAG,CAAE;AACvB,qBAAAC,MAAA,CAAsBT,cAAc,CAAGQ,SAAS,QAClD,CAAC,CAEDzB,SAAS,CAAC,IAAM,CACdmB,kBAAkB,CAACQ,OAAO,CAACC,KAAK,CAACC,UAAU,CAAG,4BAA4B,CAC1EV,kBAAkB,CAACQ,OAAO,CAACC,KAAK,CAACE,SAAS,CAAGN,YAAY,CAAC,CAAC,CAC7D,CAAC,CAAE,CAACP,cAAc,CAAEO,YAAY,CAAC,CAAC,CAElC,mBACEd,KAAA,QAAKqB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCxB,IAAA,OAAIuB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cACjDxB,IAAA,OAAIuB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cACxDtB,KAAA,QAAKqB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BxB,IAAA,WAAQuB,SAAS,CAAC,kCAAkC,CAACE,OAAO,CAAEb,UAAW,CAAAY,QAAA,CAAC,GAE1E,CAAQ,CAAC,cACTxB,IAAA,QAAKuB,SAAS,CAAC,eAAe,CAACG,GAAG,CAAEf,kBAAmB,CAAAa,QAAA,CACpDrB,QAAQ,CAACe,MAAM,CAACf,QAAQ,CAACwB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBACxD5B,KAAA,QAAiBqB,SAAS,CAAC,cAAc,CAAAC,QAAA,eACvCtB,KAAA,QAAKqB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCxB,IAAA,QACE+B,GAAG,CAAEF,OAAO,CAACvB,KAAM,CACnB0B,GAAG,CAAEH,OAAO,CAACzB,KAAM,CACnBmB,SAAS,CAAC,eAAe,CAC1B,CAAC,cACFvB,IAAA,MACEiC,IAAI,CAAEJ,OAAO,CAACtB,MAAO,CACrB2B,MAAM,CAAC,QAAQ,CACfC,GAAG,CAAC,qBAAqB,CACzBZ,SAAS,CAAC,aAAa,CAAAC,QAAA,cAEvBxB,IAAA,QAAK+B,GAAG,CAAElC,UAAW,CAACmC,GAAG,CAAC,QAAQ,CAACT,SAAS,CAAC,aAAa,CAAE,CAAC,CAC5D,CAAC,EACD,CAAC,cACNvB,IAAA,OAAIuB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEK,OAAO,CAACzB,KAAK,CAAK,CAAC,cAClDJ,IAAA,MAAGuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAEK,OAAO,CAACxB,WAAW,CAAI,CAAC,GAjBpDyB,KAkBL,CACN,CAAC,CACC,CAAC,cACN9B,IAAA,WAAQuB,SAAS,CAAC,mCAAmC,CAACE,OAAO,CAAEV,WAAY,CAAAS,QAAA,CAAC,GAE5E,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}